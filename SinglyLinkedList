#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
    int data;
    Node* next;
    Node(int data)
    {
        this -> data = data;
        this -> next = NULL;
    }
    //destructor
    ~Node()
    {
        int value = this -> data;
        // memory free
        if(this -> next != NULL)
        {
            delete next;
            this -> next = NULL;
        }
    }
};

void insertAtHead(Node* &head, int data)
{
    Node* temp = new Node(data);
    temp -> next =head;
    head = temp;
}

void insertAtTail(Node* &tail, int data)
{
    Node* temp = new Node(data);
    tail -> next = temp;
    tail = temp; 
}

void insertAtMid(Node* &head, Node* &tail, int pos, int data)
{
    if(pos == 1)
    {
        insertAtHead(head, data);
        return;
    }
    Node* temp = head;
    int cnt = 1;
    while(cnt < pos-1)
    {
        temp = temp -> next;
        cnt++;
    }
    if(temp -> next == NULL)
    {
        insertAtTail(tail, data);
        return;
    }
    Node* midNode = new Node(data);
    midNode -> next = temp -> next;
    temp -> next = midNode;
}

void deletion(Node* &head, int pos)
{
    if(pos == 1)
    {
        Node* temp = head;
        head = head -> next;
        temp -> next = NULL;
        delete temp;
    }
    else
    {
        Node* curr = head;
        Node* prev = NULL;
        int cnt = 1;
        while(cnt < pos)
        {
            prev = curr;
            curr = curr -> next;
            cnt++;
        }
        prev -> next = curr -> next;
        curr -> next = NULL;
        delete curr;
    }
}

void print(Node* &head)
{
    Node* temp = head;
    while(temp != NULL)
    {
        cout << temp -> data << " ";
        temp = temp -> next;
    }
}

int main()
{
    Node* node1 = new Node(10);
    Node* head = node1;
    Node* tail = node1;
    insertAtHead(head, 11);
    insertAtHead(head, 12);
    insertAtHead(head, 13);
    insertAtHead(head, 14);
    insertAtHead(head, 15);
    print(head);
    cout << endl;
    insertAtMid(head, tail, 7, 16);
    print(head);
    cout << endl;
    cout << head -> data << " " << tail -> data << " ";
    deletion(head, 3);
    print(head);
    return 0;
}
